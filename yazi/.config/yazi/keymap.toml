# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
# "$schema" = "https://yazi-rs.github.io/schemas/keymap.json"
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"


[manager]

prepend_keymap = [
  { on = [
    "<Enter>",
  ], run = "plugin --sync smart-enter", desc = "Open selected files" },
  { on = [
    "f",
  ], run = "plugin jump-to-char", desc = "jump to character" },
  { on = [
    "T",
  ], run = "plugin --sync hide-preview", desc = "Hide or show preview" },
  { on = [
    "w",
  ], run = 'shell "$SHELL" --block --confirm', desc = "Open shell here" },
  { on = [
    "W",
  ], run = "tasks_show" },

  # Run shell
  { on = [
    "<C-s>",
  ], run = 'shell "$SHELL" --block --confirm', desc = "Open shell here" },

  # Navigation
  { on = [
    "u",
  ], run = "arrow -1" },
  { on = [
    "e",
  ], run = "arrow 1" },

  { on = [
    "U",
  ], run = "arrow -5" },
  { on = [
    "E",
  ], run = "arrow 5" },

  { on = [
    "n",
  ], run = "leave" },
  { on = [
    "i",
  ], run = "plugin --sync smart-enter" },

  { on = [
    "N",
  ], run = "back" },
  { on = [
    "I",
  ], run = "forward" },

  { on = [
    "<C-u>",
  ], run = "seek -5" },
  { on = [
    "<C-e>",
  ], run = "seek 5" },

  # Operation
  { on = [
    "l",
  ], run = "link" },
  { on = [
    "L",
  ], run = "link --relative" },

  # Find
  { on = [
    "-",
  ], run = "find_arrow" },
  { on = [
    "=",
  ], run = "find_arrow --previous" },
  { on = [
    "m",
  ], run = "plugin bookmarks --args=save", desc = "Save current position as a bookmark" },

  { on = [
    "'",
  ], run = "plugin bookmarks --args=jump", desc = "Jump to a bookmark" },

  { on = [
    "b",
    "d",
  ], run = "plugin bookmarks --args=delete", desc = "Delete a bookmark" },

  { on = [
    "b",
    "D",
  ], run = "plugin bookmarks --args=delete_all", desc = "Delete all bookmarks" },

{on = [ "m" ], run = "plugin relative-motions", desc = "Trigger a new relative motion"},

  	# custom paths
	{ on = [ "g", "y" ], run = "cd ~/dotfiles/yazi/.config/yazi",     desc = "Go to the Yazi config directory" },
	{ on = [ "g", "n" ], run = "cd ~/dotfiles/nvim/.config/nvim/",     desc = "Go to the Neovim config directory" },
	{ on = [ "g", "o" ], run = "cd ~/OneDrive/",	 desc = "Go to the GBT Project directory" },
	{ on = [ "g", "p" ], run = "cd ~/Dev/", desc = "Go to the Personal Project directory" },
]


[tasks]

prepend_keymap = [
  { on = [
    "W",
  ], run = "close" },

  { on = [
    "u",
  ], run = "arrow -1" },
  { on = [
    "e",
  ], run = "arrow 1" },
]

[select]

prepend_keymap = [
  { on = [
    "u",
  ], run = "arrow -1" },
  { on = [
    "e",
  ], run = "arrow 1" },

  { on = [
    "U",
  ], run = "arrow -5" },
  { on = [
    "E",
  ], run = "arrow 5" },
]

[input]

prepend_keymap = [
  # Mode
  { on = ["k"], run = "insert" },
  { on = ["<C-n>"], run = ["move -999", "insert"] },
  { on = ["<C-i>"], run = ["move 999", "insert --append"] },

  # Character-wise movement
  { on = ["n"], run = "move -1" },
  { on = ["i"], run = "move 1" },

  # Word-wise movement
  { on = ["h"], run = "forward --end-of-word" },

  # Line-wise movement
  { on = ["N"], run = "move -999" },
  { on = ["I"], run = "move 999" },

  # Cut/Yank/Paste
  { on = ["x"], run = ["delete", "move 1 --in-operating"] },

  # Undo/Redo
  { on = ["l"], run = "undo" },
  { on = ["L"], run = "redo" },
]

[completion]

prepend_keymap = [
  { on = [
    "<C-u>",
  ], run = "arrow -1" },
  { on = [
    "<C-e>",
  ], run = "arrow 1" },
]

[help]

prepend_keymap = [
  # Navigation
  { on = ["u"], run = "arrow -1" },
  { on = ["e"], run = "arrow 1" },

  { on = ["U"], run = "arrow -5" },
  { on = ["E"], run = "arrow 5" },
]
