return {
  "saghen/blink.cmp",
  enabled = false,
  build = "cargo build --release",
  event = "InsertEnter",
  dependencies = "rafamadriz/friendly-snippets",
  version = "v0.*",
  opts = {
    sources = {
      default = { "lsp", "path", "snippets", "buffer" },
    },
  },
  -- config = function()
  --   local is_enabled = function()
  --     local disabled_ft = {
  --       "TelescopePrompt",
  --       "grug-far",
  --     }
  --     return not vim.tbl_contains(disabled_ft, vim.bo.filetype)
  --       and vim.b.completion ~= false
  --       and vim.bo.buftype ~= "prompt"
  --   end
  --
  --   require("blink.cmp").setup({
  --     -- enabled = is_enabled,
  --     completion = {
  --       menu = {
  --         scrollbar = false,
  --         auto_show = is_enabled,
  --         border = {
  --           { "󱐋", "WarningMsg" },
  --           "─",
  --           "╮",
  --           "│",
  --           "╯",
  --           "─",
  --           "╰",
  --           "│",
  --         },
  --       },
  --       documentation = {
  --         auto_show = true,
  --         window = {
  --           border = {
  --             { "", "DiagnosticHint" },
  --             "─",
  --             "╮",
  --             "│",
  --             "╯",
  --             "─",
  --             "╰",
  --             "│",
  --           },
  --         },
  --       },
  --     },
  --   })
  -- end,
}

-- return {
-- "saghen/blink.cmp",
--   -- optional: provides snippets for the snippet source
-- event = "VeryLazy",
-- enabled = false,
-- version = false,
-- build = "cargo build --release",
--
-- dependencies = "L3MON4D3/LuaSnip",
-- dependencies = { "rafamadriz/friendly-snippets", "mikavilpas/blink-ripgrep.nvim" },
--
--   -- use a release tag to download pre-built binaries
--   --version = "*",
-- opts_extend = { "sources.default" },
-- opts = {},
--   opts = {
--     completion = {
--       accept = {
--         auto_brackets = {
--           enabled = true,
--         },
--       },
--       menu = {
--         min_width = 1,
--         draw = {
--           columns = { { "label", "label_description", gap = 1 }, { "kind" } },
--         },
--       },
--     },
--     sources = {
--       sources = {
--         -- add lazydev to your completion providers
--         default = { "lazydev", "lsp", "path", "snippets", "buffer" },
--         providers = {
--           lazydev = {
--             name = "LazyDev",
--             module = "lazydev.integrations.blink",
--             -- make lazydev completions top priority (see `:h blink.cmp`)
--             score_offset = 100,
--           },
--         },
--       },
--       cmdline = {},
--     },
-- },
-- }

-- until blink is published https://www.lazyvim.org/extras/coding/blink#options
-- vim.g.lazyvim_blink_main = true
--
-- ---@diagnostic disable: missing-fields
-- ---@module "lazy"
-- ---@type LazySpec
-- return {
--   -- ../../../../../.local/share/nvim/lazy/blink.cmp/lua/blink/cmp/init.lua
--   -- ../../../../../.local/share/nvim/lazy/LazyVim/lua/lazyvim/plugins/extras/coding/blink.lua
--   "saghen/blink.cmp",
--   version = false,
--   -- dir = "~/git/blink.cmp/",
--   build = "cargo build --release",
--   dependencies = {
--     "rafamadriz/friendly-snippets",
--     {
--       -- ~/.local/share/nvim/lazy/blink-ripgrep.nvim/lua/blink-ripgrep/init.lua
--       "mikavilpas/blink-ripgrep.nvim",
--       -- dir = "~/git/blink-ripgrep.nvim/",
--     },
--   },
--
--   config = function(_, opts)
--     ---@module 'blink.cmp'
--     ---@type blink.cmp.Config
--     local my_opts = {
--       signature = {
--         enabled = true,
--       },
--       snippets = {
--         preset = "luasnip",
--       },
--       sources = {
--         default = {
--           "lsp",
--           "path",
--           "snippets",
--           "buffer",
--           "ripgrep",
--         },
--         -- cmdline = {
--         --   -- disable cmdline completion for now
--         -- },
--         providers = {
--           path = {
--             score_offset = 999,
--             ---@type blink.cmp.PathOpts
--             opts = {
--               show_hidden_files_by_default = true,
--             },
--           },
--           lsp = { score_offset = 99 },
--           buffer = { score_offset = 9 },
--           ripgrep = {
--             module = "blink-ripgrep",
--             name = "Ripgrep",
--             score_offset = -999,
--             ---@module "blink-ripgrep"
--             ---@type blink-ripgrep.Options
--             opts = {
--               future_features = {
--                 backend = {
--                   use = "gitgrep",
--                 },
--                 toggles = {
--                   on_off = "<leader>tg",
--                 },
--               },
--             },
--             transform_items = function(_, items)
--               for _, item in ipairs(items) do
--                 item.labelDetails = {
--                   description = "(rg)",
--                 }
--               end
--               return items
--             end,
--           },
--         },
--       },
--       fuzzy = {
--         prebuilt_binaries = {
--           download = false,
--         },
--       },
--       completion = {
--         documentation = {
--           window = {
--             desired_min_height = 30,
--             max_width = 120,
--           },
--           auto_show = true,
--         },
--         menu = {
--           draw = {
--             treesitter = { "lsp" },
--           },
--           max_height = 30,
--         },
--       },
--     }
--     opts = vim.tbl_deep_extend("force", opts, my_opts)
--
--     -- workaround LazyVim not supporting the latest schema yet
--     opts.sources.compat = nil
--     require("blink.cmp").setup(opts)
--   end,
-- }
